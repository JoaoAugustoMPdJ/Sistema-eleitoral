/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifba.saj.ads.poo.model;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;

import br.edu.ifba.saj.ads.poo.MDIApplication;

/**
 *
 * @author Operador
 */
public class Usuario {

    private String login;    
    private char[] senha;
    
    private String nome;

    public static final String PROP_NOME = "nome";

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        String oldNome = this.nome;
        this.nome = nome;
        propertyChangeSupport.firePropertyChange(PROP_NOME, oldNome, nome);
    }


    public static final String PROP_LOGIN = "login";
    public static final String PROP_SENHA = "senha";

    public char[] getSenha() {
        return senha;
    }

    public void setSenha(char[] senha) {
        char[] oldSenha = this.senha;
        this.senha = senha;
        propertyChangeSupport.firePropertyChange(PROP_SENHA, oldSenha, senha);
    }


    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        String oldLogin = this.login;
        this.login = login;
        propertyChangeSupport.firePropertyChange(PROP_LOGIN, oldLogin, login);
    }

    private transient final PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    public void addPropertyChangeListener(PropertyChangeListener listener) {
        propertyChangeSupport.addPropertyChangeListener(listener);
    }

    public void removePropertyChangeListener(PropertyChangeListener listener) {
        propertyChangeSupport.removePropertyChangeListener(listener);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * @param mdiApplication TODO
     */
    @SuppressWarnings("unchecked")
    public
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    void initComponents(final MDIApplication mdiApplication) {
    
        mdiApplication.desktopPane = new javax.swing.JDesktopPane();
        mdiApplication.menuBar = new javax.swing.JMenuBar();
        mdiApplication.fileMenu = new javax.swing.JMenu();
        mdiApplication.openMenuItem = new javax.swing.JMenuItem();
        mdiApplication.saveMenuItem = new javax.swing.JMenuItem();
        mdiApplication.saveAsMenuItem = new javax.swing.JMenuItem();
        mdiApplication.exitMenuItem = new javax.swing.JMenuItem();
        mdiApplication.editMenu = new javax.swing.JMenu();
        mdiApplication.cutMenuItem = new javax.swing.JMenuItem();
        mdiApplication.copyMenuItem = new javax.swing.JMenuItem();
        mdiApplication.pasteMenuItem = new javax.swing.JMenuItem();
        mdiApplication.deleteMenuItem = new javax.swing.JMenuItem();
        mdiApplication.helpMenu = new javax.swing.JMenu();
        mdiApplication.contentMenuItem = new javax.swing.JMenuItem();
        mdiApplication.aboutMenuItem = new javax.swing.JMenuItem();
    
        mdiApplication.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    
        mdiApplication.fileMenu.setMnemonic('f');
        mdiApplication.fileMenu.setText("File");
    
        mdiApplication.openMenuItem.setMnemonic('o');
        mdiApplication.openMenuItem.setText("Open");
        mdiApplication.fileMenu.add(mdiApplication.openMenuItem);
    
        mdiApplication.saveMenuItem.setMnemonic('s');
        mdiApplication.saveMenuItem.setText("Save");
        mdiApplication.fileMenu.add(mdiApplication.saveMenuItem);
    
        mdiApplication.saveAsMenuItem.setMnemonic('a');
        mdiApplication.saveAsMenuItem.setText("Save As ...");
        mdiApplication.saveAsMenuItem.setDisplayedMnemonicIndex(5);
        mdiApplication.fileMenu.add(mdiApplication.saveAsMenuItem);
    
        mdiApplication.exitMenuItem.setMnemonic('x');
        mdiApplication.exitMenuItem.setText("Exit");
        mdiApplication.exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdiApplication.exitMenuItemActionPerformed(evt);
            }
        });
        mdiApplication.fileMenu.add(mdiApplication.exitMenuItem);
    
        mdiApplication.menuBar.add(mdiApplication.fileMenu);
    
        mdiApplication.editMenu.setMnemonic('e');
        mdiApplication.editMenu.setText("Edit");
    
        mdiApplication.cutMenuItem.setMnemonic('t');
        mdiApplication.cutMenuItem.setText("Cut");
        mdiApplication.editMenu.add(mdiApplication.cutMenuItem);
    
        mdiApplication.copyMenuItem.setMnemonic('y');
        mdiApplication.copyMenuItem.setText("Copy");
        mdiApplication.editMenu.add(mdiApplication.copyMenuItem);
    
        mdiApplication.pasteMenuItem.setMnemonic('p');
        mdiApplication.pasteMenuItem.setText("Paste");
        mdiApplication.editMenu.add(mdiApplication.pasteMenuItem);
    
        mdiApplication.deleteMenuItem.setMnemonic('d');
        mdiApplication.deleteMenuItem.setText("Delete");
        mdiApplication.editMenu.add(mdiApplication.deleteMenuItem);
    
        mdiApplication.menuBar.add(mdiApplication.editMenu);
    
        mdiApplication.helpMenu.setMnemonic('h');
        mdiApplication.helpMenu.setText("Help");
    
        mdiApplication.contentMenuItem.setMnemonic('c');
        mdiApplication.contentMenuItem.setText("Contents");
        mdiApplication.helpMenu.add(mdiApplication.contentMenuItem);
    
        mdiApplication.aboutMenuItem.setMnemonic('a');
        mdiApplication.aboutMenuItem.setText("About");
        mdiApplication.helpMenu.add(mdiApplication.aboutMenuItem);
    
        mdiApplication.menuBar.add(mdiApplication.helpMenu);
    
        mdiApplication.setJMenuBar(mdiApplication.menuBar);
    
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(mdiApplication.getContentPane());
        mdiApplication.getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mdiApplication.desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mdiApplication.desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
    
        mdiApplication.pack();
    }

}
